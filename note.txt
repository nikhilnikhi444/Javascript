JavaScript
----------
JavaScript can be used in both frontend and as backend
frontend - it gives bahaviour 
backend -  it is use to logical operations 
its a single thread programing language - line by line executions
dynamically typed language - data type changes 

extension - .js

data type - total numbers of data type 8
--------------
1) string - single quotes or double quotes
2) boolean - true or false 
3) number - 


method to check data type - typeof()


concatenation - to join/add same or different data type
--------------------------
string + string = string
string + number = string
number + number = number

variable 
---------
- used to store data 
- identifiers - set of rules to create variable
 1) start with letter , dollar ,underscore - prefer letter
 2) subsequent characters can be letters digits , underscore etc ....
 3)if there is more than one word
            - second word can be started with capital letter 
            - use underscore between the words
            -no space between the words


 variable name = value -value can be any data type

 keyword variableName = value

 keyword - set of reserved words which gives special meaning to variables
         - cannot be used as variable name function ...etc
        
1) const - its value does not changes - resassigning is not possible - hoisting is not possible
2) var - value changes throughout - resassigning is possible - hoisting is possible
3) let - resassigning is possible - accessible inside a block - hoisting is not possible

hoisting -  using of variables before it is declared/create



template literals 
------------------
- its a way of displaying contents 
`content $(variable)`


operator 
--------
1)Assignment operator - =
2)Arithemtic operator - =
     addition - +
     subtraction - -
     division - /
     multiplication - *
     modules - %
3)Relational operators - will return boolean values
> >= < <= == ===    
= - just assign the contents 
== - compare the value 
=== - compare the value and datatype
4) logical operators- joins two or more relational operators
AND (&&)
T && T = T
T && F = F
F && T = F
F && F = F
OR (||)
T || T = T
T || F = T
F || T = T
F || F = F
NOT (!)
!T = F
!F = T

5)increment/decrement operators
(++)/(--)
x++ = 10+1 =11
x-- = 10-1 =9


6)shorthand operator
x = x+y => x+=y
x = x-y => x-=y

7)ternary operator
 condition?


conditional statements/decision making statements
-----------------------------------------------------
1)if esle 
    if(condition){
        true
        statement
    }
    else if{
        neither true or false
    }
    else{
        false
        statement
    }

looping statements
------------------
- to do task repeatedly 
1)while loop 

   syntax 
   ------
   variable initialization
   while (condition){
     task 
     condition to exit the loop (increment/decrement)
   }
2)for 
syntax
-------
for(variable initialization;condition;exit condition){
    statement
}

nested loop - loops within a loop 


function
----------
- same task is repeatedly at different locations.
function have to parts 
1) function definition
   -task
   - syntax
   ---------
   function functionname(arguments...){
            task
   }
2) function call 
  - to execute the task 
  - syntax
  functionname(arg....)



2)arrow function
syntax
------
keyword variable = (arguments...)=>{
    curly brackets used only when more than one statements
}
functioncalling
variable()


3)predefined functions
 eg: console.log(),number(),typeof(),math.floor(),pareseInt()


 4)call back fuction - a function call another function are called call back fuction

 5)asynchronus and synchronous

 6)nested function - function inside another function



DATASTRUCTURE
-------------
- it is Specilized format of organizing ,retrieving ,proccessing and storing data

-eg: array ,list,linkedlist , stack , queue ,tree graph

Array
-----
- unlike variable array can store more than one data/values
- array can store more than one datatype
- definition - array is single variable which can store more than one value of different datatype the are seperated by commas and enclosed with in sqaure brackets

- store o key:value 

key :index position 
value :data 

index - indicates the position of elements in array
value - starts from 0 - end -array length -1

length-number of items /data inside the array start from 1

representation /syntax

keyword variable = [items......]

array operations
----------------
1)push() - to add data in to an Array at the end
2)unshift() - to add data to an array at start
3)pop() - to remove the data in an array at the end
4)shift()- to  remove the data in an array at the start

different way of accessing array elements
-----------------------------------------
1) for loop
2) for in - directly access the index position
3) for of - directly access the value of the po